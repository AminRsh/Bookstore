// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") 
  directUrl = env("POSTGRES_URL_NON_POOLING") 
}

model User {
  id        Int      @id @default(autoincrement())
  clerkId   String   @unique
  email     String   @unique
  username  String
  password  String
  firstName  String
  lastName  String
  userPhoto  String
  createdBooks Book[]        @relation("CreatedByUser")
  bookReviews BookReview[] 
  createdAt DateTime @default(now())
  @@map("users")
}

model Book {
  id              Int        @id @default(autoincrement())
  slug            String     @unique
  title           String
  author          String
  category        String?
  description     String?
  bookCoverImg    String?
  price           Int
  approved        Boolean
  publisher       String?
  isbn            String?
  language        String?
  pages           Int?
  rating          Float?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  reviews         BookReview[]
  createdBy       User?         @relation("CreatedByUser", fields: [createdById], references: [id])
  createdById     Int?
  @@map("books")
}

model BookReview {
  id          Int      @id @default(autoincrement())
  book        Book     @relation(fields: [bookId], references: [id])
  bookId      Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  review      String
  createdAt   DateTime @default(now())

  @@map("book_reviews")
}
